version: 2.1

orbs:
  android: circleci/android@2.1.2

references:
  cache_key: &cache_key
    key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

  restore_cache: &restore_cache
    restore_cache:
      <<: *cache_key

  workspace: &workspace
    ~/code

  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: cimg/android:2022.09
    environment:
      JVM_OPTS: -Xmx3200m

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace

  create_keystore: &create_keystore
    run:
      name: Create keystore.properties
      command: printf 'MARVEL_KEY=%s\nMARVEL_PRIVATE_KEY=%s' \ $MARVEL_KEY $MARVEL_PRIVATE_KEY > keystore.properties

jobs:
  build:
    executor:
      name: android/android-docker
      resource-class: large
      tag: 2022.09.2
    steps:
      - checkout
      - android/restore-build-cache
      - android/restore-gradle-cache
      - *create_keystore
      - run:
          name: Build debug APK
          command: |
            ./gradlew :app:assembleDebug
      - android/save-build-cache
      - android/save-gradle-cache
      - store_artifacts:
          path: app/build/outputs/apk
          destination: apk

  quality:
    <<: *android_config
    resource_class: large
    steps:
      - *attach_workspace
      - *restore_cache
      - run:
          name: Run Android Lint
          command: ./gradlew lint
      - run:
          name: Run ktlint
          command: ./gradlew ktlintCheck
      - run:
          name: Run detekt
          command: ./gradlew detekt
      - store_artifacts:
          path: app/build/reports
          destination: reports

  unit_test:
    executor:
      name: android/android-docker
      resource-class: large
      tag: 2022.09.2
    steps:
      - checkout
      - android/restore-build-cache
      - android/restore-gradle-cache
      - *create_keystore
      - android/run-tests:
          test-command: ./gradlew jacocoFullTestReport
      - android/save-build-cache
      - android/save-gradle-cache
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - store_artifacts:
          path: build/reports
          destination: reports

  android_test:
    executor:
      name: android/android-machine
      tag: 2022.09.1
    steps:
      - checkout
      - *create_keystore
      - android/start-emulator-and-run-tests:
          test-command: ./gradlew connectedDebugAndroidTest
          system-image: system-images;android-30;google_apis;x86
      - android/save-build-cache
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/outputs/androidTest-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results/junit
      - store_artifacts:
          path: ~/test-results/junit
      - store_artifacts:
          path: build/reports
          destination: reports

  report_coverage:
    <<: *android_config
    resource_class: large
    steps:
      - *attach_workspace
      - *restore_cache
      - run:
          name: Upload coverage report to Coveralls
          command: ./gradlew coveralls

workflows:
  android-workflow:
    jobs:
      - build
      - unit_test:
          requires:
            - build
      - android_test:
          requires:
            - build